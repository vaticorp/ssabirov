<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.UserMapper">

    <resultMap id="user" type="com.model.User">
        <id property="userId" column="user_id"/>
        <result property="name" column="name"/>
        <result property="surname" column="surname"/>
        <result property="age" column="age"/>
        <association property="address" resultMap = "AddressResult" />
    </resultMap>

    <resultMap type="Address" id="AddressResult">
        <id property="id" column="id"/>
        <result property="index" column="index"/>
        <result property="city" column="city"/>
        <result property="street" column="street"/>
        <result property="houseNumber" column="house_number"/>
    </resultMap>

    <!--<association property="address" column="address_id" javaType="com.model.Address" select="com.mybatis.mapper.AddressMapper.getEntityById"/>-->
    <cache />

    <select id="getEntityById" parameterType="java.lang.Long" resultMap="user">
        SELECT u.user_id,
               u.name,
               u.surname,
               u.age,
               u.address_id,
               a.id,
               a.index,
               a.city,
               a.street,
               a.house_number
        FROM users u LEFT OUTER JOIN address a ON  a.id = u.address_id
        WHERE u.user_id = #{id}
    </select>

    <select id="getListOfEntities" resultMap="user">
        SELECT u.user_id,
               u.name,
               u.surname,
               u.age,
               u.address_id,
               a.id,
               a.index,
               a.city,
               a.street,
               a.house_number
        FROM users u LEFT OUTER JOIN address a ON  a.id = u.address_id
    </select>

    <delete id="removeEntity" parameterType="User">
        DELETE FROM users
        WHERE user_id = #{userId};
    </delete>

    <update id="updateEntity" parameterType="User">
        UPDATE users
        SET name=#{name}, surname=#{surname}, age=#{age}
        WHERE user_id = #{userId};
    </update>

    <insert id="addEntity" parameterType="User" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id" flushCache="true" >
        INSERT INTO users (name, surname, age, address_id)
        VALUES (#{name}, #{surname}, #{age}, #{address.id})
    </insert>

</mapper>